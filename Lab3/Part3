`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: Auburn University ELEC4200 Lab 3
// Engineer: Courtney Stewart
// 
// Create Date: 09/11/2023 08:59:08 PM
// Design Name: Task 3
// Module Name: eightToThreePriorityEncoder
// 
//////////////////////////////////////////////////////////////////////////////////


module eightToThreePriorityEncoder(
    input E1,
    input [7:0] v,
    output reg [2:0] y,
    output reg E0,
    output reg GS
    );
    
    always @ (E1 or v)
        if(E1==1)           //if E1 is 1 it's a special case 
    begin
            y = 3'b111;     //all 1's for all outputs
            GS = 1;
            E0 = 1;
    end    
        else if (&v)        //if E1 = 0 and v is all 1's
            begin 
                y = 3'b111;     //special output
                GS = 1;         
                E0 = 0;
            end    
        
        else            //all other normal cases begin here
        begin
         GS = 0;        //set GS = 0
         E0 = 1;        //set E0 = 1
         if (!v[0] && &v[7:1]) y = 7;           //check if v[0] = 0, and use reduction and operator ooooo
         else if (!v[1] && &v[7:2]) y = 6;      //with reduction and operator we're simultaneously checking all other
         else if (!v[2] && &v[7:3]) y = 5;      //bits if they're 1
         else if (!v[3] && &v[7:4]) y = 4;      //continues down checking all other bits
         else if (!v[4] && &v[7:5]) y = 3;
         else if (!v[5] && &v[7:6]) y = 2;
         else if (!v[6] && v[7]) y = 1;
         else if (!v[7]) y = 0;
         else y = 3'bx;
        end
endmodule
